parameters:
    skydiablo_media.media_router.s3.region: 'eu-west-1'
    skydiablo_media.media_router.img_ixcom.domain: 'CHANGE_ME'
    skydiablo_media.media_router.img_ixcom.secure_url_token: 'CHANGE_ME'
    skydiablo_media.media_router.sm_image_resizer.endpoint: 'CHANGE_ME'

services:
    #============ AutoWire Repository ===============
    SkyDiablo\MediaBundle\Entity\Repository\:
        resource: '../../Entity/Repository/*'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    #============ AutoWire Entity Factory ===============
    SkyDiablo\MediaBundle\Entity\Factory\:
        resource: '../../Entity/Factory/*'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    #============ AutoWire Form ===============
    SkyDiablo\MediaBundle\Form\:
        resource: '../../Form/*'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
    #============ Controller ===============
    SkyDiablo\MediaBundle\Controller\ImageController:
        arguments:
            - "@skydiablo_media.imagine"
            - "@skydiablo_media.service_media_router.skydiablo_controller_media_router"
        tags:
            - { name: controller.service_arguments }
    
    #============ MEDIA ROUTER ===============
    SkyDiablo\MediaBundle\Service\MediaRouter\MediaRouterInterface: "@skydiablo_media.service_media_router"
    skydiablo_media.service_media_router: '@skydiablo_media.service_media_router.skydiablo_controller_media_router'

    skydiablo_media.service_media_router.skydiablo_controller_media_router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\ControllerMediaRouter\ControllerMediaRouter
        arguments: 
            - '@router'
            - '%kernel.secret%'

    skydiablo_media.service_media_router.s3media_router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\S3MediaRouter
        arguments: ['%skydiablo_media.media_router.s3.region%']
        public: false

    skydiablo_media.service_media_router.rsz_io_media_router.pre_s3:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\RszIoMediaRouter
        arguments: ['@skydiablo_media.service_media_router.s3media_router']

    skydiablo_media.service_media_router.wrapped_cf_rsz_io_media_router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\WrappedCfRszIoMediaRouter
        arguments: ['@skydiablo_media.service_media_router.s3media_router']

    skydiablo_media.service_media_router.rsz_io_media_router.fallback:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\ContainerAwareChainMediaRouter
        arguments:
            - ['skydiablo_media.service_media_router.rsz_io_media_router.pre_s3', 'skydiablo_media.service_media_router.skydiablo_controller_media_router']
        calls:
            - [setContainer, ['@service_container']]

    skydiablo_media.service_media_router.cloud_front_media_router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\CloudFrontMediaRouter
        arguments: ['%kernel.environment%']

    skydiablo_media.service_media_router.img_ixcom_media_router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\ImgIXComMediaRouter
        arguments:
            - '%skydiablo_media.media_router.img_ixcom.domain%'
            - '%skydiablo_media.media_router.img_ixcom.secure_url_token%'

    skydiablo_media.service_media_router.skydiablo_image_resizer.fallback:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\ContainerAwareChainMediaRouter
        arguments:
            - ['skydiablo_media.service_media_router.skydiablo_image_resizer.router', 'skydiablo_media.service_media_router.s3media_router']
        calls:
            - [setContainer, ['@service_container']]

    skydiablo_media.service_media_router.skydiablo_image_resizer.router:
        class: SkyDiablo\MediaBundle\Service\MediaRouter\SkyDiabloImageResizer\Router
        arguments:
            - '%skydiablo_media.media_router.sm_image_resizer.endpoint%'

    #================ SERVICE ===============
    skydiablo_media.imagine:
        class: Imagine\Gd\Imagine

    skydiablo_media.service.media_storage_service:
        class: SkyDiablo\MediaBundle\Service\MediaStorageService
        arguments: ['flysystem.service.id']

    skydiablo_media.service.source_collection_service:
        class: SkyDiablo\MediaBundle\Service\SourceCollectionService
        arguments: ['@skydiablo_media.service_media_router']

    skydiablo_media.service.filesystem.memory_adapter:
        class: League\Flysystem\Memory\MemoryAdapter
        
    skydiablo_media.service.filesystem.memory:
        class: League\Flysystem\Filesystem
        arguments: 
            - '@skydiablo_media.service.filesystem.memory_adapter'

    SkyDiablo\MediaBundle\Service\ImageService:
        arguments:
            - '@skydiablo_media.imagine'
            - '@skydiablo_media.service.filesystem.memory'
            - { jpeg_quality: 90 }

    #=============== LISTENER ================
    skydiablo_media.entity_listener.media_listener:
        class: SkyDiablo\MediaBundle\Entity\Listener\MediaListener
        arguments: ['@skydiablo_media.service.media_storage_service']
        tags:
            - { name: doctrine.orm.entity_listener }

    #=============== SERIALIZER EVENT ================
    skydiablo_media.serializer_event.annotation_reader:
        class: Doctrine\Common\Annotations\AnnotationReader
        
    skydiablo_media.serializer_event.media_event:
        class: SkyDiablo\MediaBundle\Serializer\Event\MediaEvent
        arguments:
            - '@skydiablo_media.service.source_collection_service'
            - '@skydiablo_media.serializer_event.annotation_reader'
        tags:
            - { name: jms_serializer.event_subscriber }

    #=============== TWIG ================
    skydiablo_media.twig.media_twig_extension:
        class: SkyDiablo\MediaBundle\Twig\MediaTwigExtension
        arguments: ['@service_container']
        calls:
            - ['setContainer', ['@service_container']]
        public: false
        tags:
            - { name: twig.extension }